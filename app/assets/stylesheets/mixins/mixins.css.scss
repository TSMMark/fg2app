@mixin full-page($padding:0) {
  display   : block;
  position  : absolute;
  padding   : 0;
  margin    : 0;
  top:$padding;
  right:$padding;
  bottom:$padding;
  left:$padding;
}

.zero-edge{
  position:absolute;
  top:0;
  bottom:0;
  right:0;
  left:0;
}

@mixin percent-for-n($n:1, $padding:0.01) {
  $w:((1/$n) - $padding);
  width: percentage($w) ;
}
@mixin percent-for-all($padding:0.01) {
  .count-1 &{
    @include percent-for-n(1, $padding);
  }
  .count-2 &{
    @include percent-for-n(2, $padding);
  }
  .count-3 &{
    @include percent-for-n(3, $padding);
  }
  .count-4 &{
    @include percent-for-n(4, $padding);
  }
  .count-5 &{
    @include percent-for-n(5, $padding);
  }
  .count-6 &{
    @include percent-for-n(6, $padding);
  }
}

/*
  media query
  if $only == true, only @content on the device
  if $only == false, only @content on everything BUT the device
*/
@mixin qif($device, $only:true, $dim:width) {
  /* size reference (not necessarily real device sizes):
      iPhone:(320,480) or (320,568)
      iPad:(768,980px)
  */
  @if $device == huge {
    @if $only == true {
      @media (min-#{$dim}: 1200px) { @content; }
    } @else {
      @media (max-#{$dim}: 1199px) { @content; }
    }
  }
  @else if $device == desktop {
    @if $only == true {
      @media (min-#{$dim}: 992px) { @content; }
    } @else {
      @media (max-#{$dim}: 991px) { @content; }
    }
  }
  @else if $device == tablet {
    @if $only == true {
      @media (min-#{$dim}: 768px) and (max-#{$dim}: 992px) { @content; }
    } @else {
      @media (max-#{$dim}: 767px) , (min-#{$dim}: 991px) { @content; }
    }
  }
  @else if $device == phone {
    @if $only == true {
      @media (max-#{$dim}: 767px) { @content; }
    } @else {
      @media (min-#{$dim}: 768px) { @content; }
    }
  }
  @else if $device == tiny {
    @if $only == true {
      @media (max-#{$dim}: 568px) { @content; }
    } @else {
      @media (min-#{$dim}: 569px) { @content; }
    }
  }
}

@mixin phone($is_below:true) {
  @include qif($phone-cutoff-size, $is_below) {
    @content;
  }
}
@mixin mobile($is_below:true) {
  @include qif($mobile-cutoff-size, $is_below) {
    @content;
  }
}
@mixin desktop($is_below:true) {
  @include qif(desktop, $is_below) {
    @content;
  }
}
@mixin huge($is_below:true) {
  @include qif(huge, $is_below) {
    @content;
  }
}

// michaelsacca/Compass-Placeholder-Text-Mixin
@mixin input-placeholder {
  &.placeholder { @content }
  &:-moz-placeholder { @content }
  &::-moz-placeholder { @content }
  &:-ms-input-placeholder { @content }
  &::-webkit-input-placeholder { @content }
}

@mixin base-font{
  font-family: $base-font, sans-serif;
}

@mixin scroll-on-hover($d:y) {
  overflow-#{$d}:hidden;
  &:hover{
    overflow-#{$d}:scroll;
  }
}

@mixin no-margin {
  margin:0;
  padding:0;
}

@mixin list-no-margin {
  @include no-margin;
  list-style:none;
  li{
    @include no-margin;
    list-style:none;
  }
}

// width and minimum width
@mixin wmw($width:auto) {
  width:$width;
  min-width:$width;
}

// height and line-height
@mixin hlh($h:auto) {
  height:$h;
  line-height:$h;
}



@mixin font-line-size($size:14px) {
  line-height:$size;
  font-size:$size;
  // background-position:$size, $size;
}
@mixin icon-size($size:14px) {
  width:$size;
  height:$size;
  @include font-line-size($size);
  // background-position:$size, $size;
}

@mixin v-center($container-height, $self-height, $position:relative, $offset:top, $plus:-2px) {
  position: $position;
  #{$offset}: ($container-height - $self-height) / 2 + $plus;
}

@mixin topbar-gradient($is_button:true) {
  @include background($topbar-gradient);
}

@mixin button-gradient($is_button:true) {
  @include background($button-gradient);
  @if $is_button == true{
    @include transition-property(opacity);
    @include transition-duration($button-hover-duration);
    opacity: $button-default-opacity;
    color:$white;
    &:hover{
      @include transition-property(opacity);
      @include transition-duration($button-hover-duration);
      opacity: $button-hover-opacity;
    }
    &:active{
      @include transition-property(opacity);
      @include transition-duration($button-press-duration);
      opacity: $button-active-opacity;
    }
  }
}

@mixin hover-transition-durations($property:false) {
  @if $property != false {
    @include transition-property($property);
  }
  @include transition-duration($button-hover-duration);
  &:hover{
    @if $property != false {
      @include transition-property($property);
    }
    @include transition-duration($button-hover-duration);
  }
  &:active{
    @if $property != false {
      @include transition-property($property);
    }
    @include transition-duration($button-press-duration);
  }
}

// single-box-shadow($color, $hoff, $voff, $blur, $spread, $inset)
@mixin shadow-bottom() {
  @include single-box-shadow($shadow-grey, 0px, 0px, 6px);
}
@mixin box-shadow-dark() {
  @include single-box-shadow($shadow-grey, 0px, 0px, 10px, 2px);
}
@mixin box-shadow-light() {
  @include single-box-shadow($shadow-grey, 0px, 0px, 6px, 1px);
}


// makes the first and last element lose their respective borders
@mixin first-last-no-border($parent:'&', $child:null, $axis:vertical) {
  $dir-first:top;
  $dir-last:bottom;
  @if($axis==horizontal) {
    $dir-first:left;
    $dir-last:right;
  }
  #{unquote($parent)}:first-child #{unquote($child)} {
    border-#{$dir-first}:none;
    @content;
  }
  #{unquote($parent)}:last-child #{unquote($child)} {
    border-#{$dir-last}:none;
    @content;
  }
}
